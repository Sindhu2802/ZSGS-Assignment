//*Day-6 Assignment Questions:*
/*1. Illustrate the concept-Encapsulation with the Payment Gateway System.[The class should encapsulate private data members such as transaction ID, payer name, payee name, amount, payment method, and transaction status. Provide appropriate public getter and setter methods to access and modify these details securely. Also include a method to display the transaction summary.]
‌
2. Create a Java application that demonstrates the use of user-defined packages by organising classes based on their functionality:
--- arithmetic: This package should include a class that defines methods to perform the following operations on two numbers:
a. Addition
b. Subtraction
c. Multiplication
d. Division
e. Modulo
--- stringutils: This package should include a class that defines methods for:
a. Concatenating two strings
b. Reversing a string
c. Finding the length of a string
In your main class (outside those packages), import the above packages and demonstrate the usage of all the methods.
‌
3. Design a class `Employee` with private data members: employee ID, name, designation, department, and monthly salary. Use proper getter and setter methods to access and update these fields. Add a method to calculate and return the annual salary of the employee.
‌
4. Design a travel booking system using two packages:
`travel.booking` – includes a class `Ticket` with ticket ID, destination, and fare.
`travel.user` – includes a class `User` with user details and a method to book a ticket.
Illustrate accessing ticket data from within the user class.
‌
5. Design a class named `BankAccount` that uses the concept of encapsulation. The class should have the following private data members: account number, account holder name, and balance. Provide public getter and setter methods to access and modify these fields. Also, include a method to deposit and withdraw amount ensuring that the balance cannot go negative.*/

/*1. Illustrate the concept-Encapsulation with the Payment Gateway System.[The class should encapsulate private data members such as transaction ID, payer name, payee name, amount, payment method, and transaction status. Provide appropriate public getter and setter methods to access and modify these details securely. Also include a method to display the transaction summary*/


class Payment{
	 //encapsulated
	private int transactionId;
	private String payerName;
	private String payeeName;
	private double amount;
	private String paymentMethod;
	private String transactionStatus;


public Payment(int transactionId,String payerName,String payeeName,double amount,String paymentMethod,String transactionStatus)
{
	//parameterized Constructor
	this.transactionId = transactionId;
	this.payerName = payerName;
	this.payeeName = payeeName;
	this.amount =  amount;
	this.paymentMethod = paymentMethod;
	this.transactionStatus = transactionStatus;
}
	
	public int getTransactionId() {
        return transactionId;
    }

    public void setTransactionId(int transactionId) {
        this.transactionId = transactionId;
    }

	public String getPayerName(){
		  return payerName;
	  }
	 public void setPayerName(String payerName)
	 {
		 this.payerName =  payerName;
	 }
	  
	  public String getPayeeName(){
		  return payeeName;
	  }
	  public void setPayeeName(String payeeName)
	  {
		  this.payeeName = payeeName;
	  }
		  
	  public double getAmount(){
		  return amount;
	  }
	  public void setAmount(double amount)
	  {
		  this.amount = amount;
	  }
	  
	  public String getPaymentMethod(){
		 
		 return paymentMethod;
	  }
	  public void setpaymentMethod(String paymentMethod)
	  {
		  this.paymentMethod = paymentMethod;
	  }
	  
	  public String getTransactionStatus(){
		  
		  return transactionStatus;
	  }
	  public void setTransactionStatus(String transactionStatus)
	  {
		  this.transactionStatus = transactionStatus;
	  }
	  
	  public void display(){
		  System.out.println("Summary of bankdetails ");
		  System.out.println("Transaction id  " + transactionId);
		  System.out.println(" Payer Name " + payerName);
		  System.out.println("payee Name " + payeeName);
		  System.out.println("Amount  " + amount);
		  System.out.println("PaymentMethod  " + paymentMethod);
		  System.out.println("TransactionStatus" + transactionStatus);
	  }
}
	  
 class paymentgateway{
	 public static void main(String[] args)
	 {
		 Payment pay = new Payment(9823,"Jeya","Sindhu",25000,"UPI","Pending");
		 pay.display();
		 
		 
	 }
 }
		  

